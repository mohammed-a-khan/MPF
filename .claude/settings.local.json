{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run test:*)",
      "Bash(timeout 30 npm run test -- --feature=test/akhan/features/akhan-login-navigation.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(timeout 45 npm run test -- --feature=test/akhan/features/akhan-login-navigation.feature --project=akhan --env=dev --headless=false 2>&1)",
      "Bash(find:*)",
      "Bash(timeout 30s npm run test -- --feature=test/akhan/features/akhan-login-navigation.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(npx ts-node:*)",
      "Bash(iconv:*)",
      "Bash(mv:*)",
      "Bash(ls:*)",
      "Bash(cp:*)",
      "Bash(timeout 30 npm run test:akhan:headed:*)",
      "Bash(rm:*)",
      "Bash(timeout 60 npm run test:akhan:headed:*)",
      "Bash(npx playwright test:*)",
      "Bash(npm run lint)",
      "Bash(npx eslint:*)",
      "Bash(node:*)",
      "Bash(npm test:*)",
      "Bash(rg:*)",
      "Bash(true)",
      "Bash(timeout 5 npm run test -- --feature=test/akhan/features/akhan-login-navigation.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(timeout 5 npm run test -- test/akhan/features/akhan-login-navigation.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(mkdir:*)",
      "Bash(timeout 120 npm run test -- test/akhan/features/akhan-login-navigation-csv.feature --project=akhan --env=dev --headless=true --grep=\"@TC501-csv\" 2 >& 1)",
      "Bash(pkill:*)",
      "Bash(timeout 60 npm run test -- test/akhan/features/akhan-login-navigation-csv.feature --project=akhan --env=dev --dry-run --grep=\"@TC501-csv\" 2 >& 1)",
      "Bash(timeout 30 npm run test:*)",
      "Bash(timeout 60 npm run test:*)",
      "Bash(timeout 30 npx ts-node:*)",
      "Bash(timeout 30s npm run test:*)",
      "Bash(timeout 180 npm test -- test/akhan/features/akhan-login-navigation-csv.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(timeout 60 npm test:*)",
      "Bash(timeout 240 npm test -- test/akhan/features/akhan-login-navigation-csv.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(timeout 120 npm test -- test/akhan/features/test-simple.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(SKIP_STEP_LOADING=true timeout 120 npm test -- test/akhan/features/akhan-login-navigation-csv.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(timeout 300 npm test -- test/akhan/features/akhan-login-navigation-csv.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(timeout 240 npm test -- test/akhan/features/akhan-login-navigation.feature --project=akhan --env=dev --headless=false 2 >& 1)",
      "Bash(npm run bdd:*)",
      "Bash(cross-env:*)",
      "Bash(npx cross-env:*)",
      "Bash(python3:*)",
      "Bash(chmod:*)",
      "Bash(timeout 30 npm test:*)",
      "Bash(npm run verify-excel-data:*)",
      "Bash(npm run:*)",
      "Bash(sed:*)",
      "Bash(BROWSER_MAXIMIZED=true BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npm test test/crru/features/crru-login-navigation.feature 2 >& 1)",
      "Bash(BROWSER_MAXIMIZED=true BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npm test test/crru/features/crru-login-navigation.feature -- --grep=\"@TC501|@TC502\" 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npm run bdd:crru:smoke 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npx ts-node src/index.ts --feature=test/crru/features/crru-login-navigation.feature 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npx ts-node src/index.ts --feature=test/crru/features/crru-login-navigation.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 60 npx ts-node src/index.ts --feature=test/crru/features/crru-login-navigation.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 30 npx ts-node src/index.ts --feature=test-simple.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 120 npx ts-node src/index.ts --feature=test/crru/features/crru-login-navigation.feature --headless=false 2 >& 1)",
      "Bash(timeout 60 npx ts-node:*)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 60 npx ts-node src/index.ts --feature=test/crru/features/test-navigation.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=reuse-browser timeout 60 npx ts-node src/index.ts --feature=test/crru/features/test-navigation.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npx ts-node -e \"\nconst { LoginPage } = require('./test/crru/pages/LoginPage');\nconst { BrowserManager } = require('./src/core/browser/BrowserManager');\nconst { ConfigurationManager } = require('./src/core/configuration/ConfigurationManager');\nconst { ExecutionContext } = require('./src/bdd/context/ExecutionContext');\nconst { BDDContext } = require('./src/bdd/context/BDDContext');\n\nasync function test() {\n  await ConfigurationManager.loadConfiguration('', 'dev');\n  const browserManager = BrowserManager.getInstance();\n  \n  // Test 1\n  console.log('=== First Scenario ===');\n  const ctx1 = new ExecutionContext('test1');\n  await ctx1.initialize();\n  BDDContext.getInstance().initialize(ctx1);\n  const page1 = ctx1.getPage();\n  \n  const login1 = new LoginPage();\n  await login1.initialize(page1);\n  await login1.navigateTo();\n  console.log('First navigation completed:', page1.url());\n  \n  await ctx1.cleanup();\n  \n  // Test 2\n  console.log('\\\\n=== Second Scenario ===');\n  const ctx2 = new ExecutionContext('test2');\n  await ctx2.initialize();\n  BDDContext.getInstance().initialize(ctx2);\n  const page2 = ctx2.getPage();\n  \n  const login2 = new LoginPage();\n  await login2.initialize(page2);\n  await login2.navigateTo();\n  console.log('Second navigation completed:', page2.url());\n  \n  await ctx2.cleanup();\n  await browserManager.cleanup();\n  console.log('\\\\nâœ… Test completed successfully!');\n}\n\ntest().catch(console.error);\n\" 2>&1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 90 npx ts-node src/index.ts --feature=test/crru/features/crru-login-navigation.feature --tags=@TC501 --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 60 npx ts-node src/index.ts --feature=test-minimal.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario timeout 90 npx ts-node src/index.ts --feature=test-browser-fix.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npx ts-node src/index.ts --feature=test-final-fix.feature --headless=false 2 >& 1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npx ts-node -e \"\nconst { ConfigurationManager } = require('./src/core/configuration/ConfigurationManager');\n(async () => {\n  await ConfigurationManager.loadConfiguration('', 'dev');\n  console.log('BROWSER_MANAGEMENT_STRATEGY from config:', ConfigurationManager.get('BROWSER_MANAGEMENT_STRATEGY'));\n  console.log('BROWSER_MANAGEMENT_STRATEGY from env:', process.env.BROWSER_MANAGEMENT_STRATEGY);\n})();\n\" 2>&1)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=new-per-scenario npm run test:feature test/crru/features/crru-login-navigation.feature)",
      "Bash(BROWSER_MANAGEMENT_STRATEGY=reuse-browser npm run test -- test/crru/features/crru-login-navigation.feature --project=crru --env=sit --headless=false)",
      "Bash(./test-final-verification.sh:*)",
      "Bash(./check-logs.sh:*)",
      "Bash(./verify-reuse-browser-maximized.sh:*)",
      "Bash(./run-test.ps1 -project crru -env sit -feature test/crru/features/crru-login-navigation.feature -headless false 2 >& 1)"
    ],
    "deny": []
  }
}