{
  "metadata": {
    "description": "Comprehensive test data for CS Framework demonstration",
    "version": "1.0.0",
    "created": "2024-01-01",
    "testTypes": ["ui", "api", "database", "integration"],
    "executionFlags": {
      "executeTest": "Controls whether test should be executed",
      "testPriority": "P1=Critical, P2=High, P3=Medium, P4=Low",
      "testEnvironment": "Target environment for test execution"
    }
  },
  "sauceDemoUsers": [
    {
      "executeTest": true,
      "testId": "SD_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "username": "standard_user",
      "password": "secret_sauce",
      "userType": "standard",
      "expectedBehavior": "normal_flow",
      "description": "Standard user with normal shopping flow",
      "adoTestCaseId": 415
    },
    {
      "executeTest": true,
      "testId": "SD_002", 
      "testPriority": "P2",
      "testEnvironment": "demo",
      "username": "problem_user",
      "password": "secret_sauce",
      "userType": "problem",
      "expectedBehavior": "image_issues",
      "description": "Problem user with image display issues",
      "adoTestCaseId": 416
    },
    {
      "executeTest": false,
      "testId": "SD_003",
      "testPriority": "P3",
      "testEnvironment": "demo",
      "username": "performance_glitch_user",
      "password": "secret_sauce",
      "userType": "performance",
      "expectedBehavior": "slow_performance",
      "description": "Performance user with slow response times",
      "adoTestCaseId": 417
    },
    {
      "executeTest": false,
      "testId": "SD_004",
      "testPriority": "P4",
      "testEnvironment": "demo",
      "username": "locked_out_user",
      "password": "secret_sauce",
      "userType": "locked",
      "expectedBehavior": "login_blocked",
      "description": "Locked out user should not be able to login",
      "adoTestCaseId": 418
    }
  ],
  "apiTestCases": [
    {
      "executeTest": true,
      "testId": "API_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "method": "GET",
      "endpoint": "/api/users",
      "headers": {
        "Content-Type": "application/json",
        "Accept": "application/json"
      },
      "expectedStatus": 200,
      "expectedResponseTime": 2000,
      "description": "Fetch all users",
      "adoTestCaseId": 419
    },
    {
      "executeTest": true,
      "testId": "API_002",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "method": "POST",
      "endpoint": "/api/users",
      "headers": {
        "Content-Type": "application/json"
      },
      "requestBody": {
        "name": "Test User",
        "email": "test@example.com",
        "phone": "555-0123"
      },
      "expectedStatus": 201,
      "expectedResponseTime": 3000,
      "description": "Create new user",
      "adoTestCaseId": 420
    },
    {
      "executeTest": true,
      "testId": "API_003",
      "testPriority": "P2",
      "testEnvironment": "demo",
      "method": "PUT",
      "endpoint": "/api/users/{userId}",
      "headers": {
        "Content-Type": "application/json"
      },
      "requestBody": {
        "name": "Updated User",
        "email": "updated@example.com"
      },
      "expectedStatus": 200,
      "expectedResponseTime": 2000,
      "description": "Update existing user",
      "adoTestCaseId": 421
    }
  ],
  "databaseTestCases": [
    {
      "executeTest": true,
      "testId": "DB_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "databaseType": "sqlserver",
      "operation": "SELECT",
      "query": "SELECT COUNT(*) as total_users FROM users WHERE status = 'active'",
      "expectedRowCount": 1,
      "expectedColumns": ["total_users"],
      "description": "Count active users",
      "adoTestCaseId": 422
    },
    {
      "executeTest": true,
      "testId": "DB_002",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "databaseType": "mongodb",
      "operation": "FIND",
      "query": "db.users.find({status: 'active'}).count()",
      "expectedResult": "number",
      "description": "Count active users in MongoDB",
      "adoTestCaseId": 423
    },
    {
      "executeTest": false,
      "testId": "DB_003",
      "testPriority": "P3",
      "testEnvironment": "demo",
      "databaseType": "postgresql",
      "operation": "INSERT",
      "query": "INSERT INTO test_data (name, value) VALUES ('test', 'value')",
      "expectedRowCount": 1,
      "description": "Insert test data",
      "adoTestCaseId": 424
    }
  ],
  "performanceTestCases": [
    {
      "executeTest": true,
      "testId": "PERF_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "scenario": "page_load",
      "url": "https://www.saucedemo.com",
      "maxLoadTime": 3000,
      "maxFirstContentfulPaint": 1500,
      "maxLargestContentfulPaint": 2500,
      "description": "SauceDemo page load performance",
      "adoTestCaseId": 425
    },
    {
      "executeTest": true,
      "testId": "PERF_002",
      "testPriority": "P2",
      "testEnvironment": "demo",
      "scenario": "api_response",
      "endpoint": "/api/users",
      "maxResponseTime": 1000,
      "concurrentUsers": 10,
      "description": "API response time under load",
      "adoTestCaseId": 426
    }
  ],
  "crossBrowserTestCases": [
    {
      "executeTest": true,
      "testId": "CB_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "browser": "chromium",
      "viewport": "1920x1080",
      "testScenario": "login_flow",
      "description": "Login flow on Chromium desktop",
      "adoTestCaseId": 427
    },
    {
      "executeTest": true,
      "testId": "CB_002",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "browser": "firefox",
      "viewport": "1920x1080",
      "testScenario": "login_flow",
      "description": "Login flow on Firefox desktop",
      "adoTestCaseId": 428
    },
    {
      "executeTest": true,
      "testId": "CB_003",
      "testPriority": "P2",
      "testEnvironment": "demo",
      "browser": "webkit",
      "viewport": "1366x768",
      "testScenario": "login_flow",
      "description": "Login flow on WebKit",
      "adoTestCaseId": 429
    },
    {
      "executeTest": false,
      "testId": "CB_004",
      "testPriority": "P3",
      "testEnvironment": "demo",
      "browser": "chromium",
      "viewport": "375x667",
      "testScenario": "mobile_flow",
      "description": "Mobile responsive testing",
      "adoTestCaseId": 430
    }
  ],
  "aiHealingTestCases": [
    {
      "executeTest": true,
      "testId": "AI_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "scenario": "element_healing",
      "originalLocator": "[data-test='username']",
      "fallbackLocators": ["#user-name", ".login_username", "input[placeholder*='Username']"],
      "aiDescription": "username input field on login page",
      "confidenceThreshold": 0.75,
      "description": "Test AI healing for username field",
      "adoTestCaseId": 431
    },
    {
      "executeTest": true,
      "testId": "AI_002",
      "testPriority": "P2",
      "testEnvironment": "demo",
      "scenario": "visual_healing",
      "targetElement": "login button",
      "visualFeatures": ["red background", "white text", "LOGIN text"],
      "nearbyElements": ["username field", "password field"],
      "description": "Test visual AI healing for login button",
      "adoTestCaseId": 432
    }
  ],
  "integrationTestCases": [
    {
      "executeTest": true,
      "testId": "INT_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "scenario": "ui_to_api",
      "uiAction": "add_to_cart",
      "apiEndpoint": "/api/cart",
      "databaseTable": "cart_items",
      "expectedFlow": "ui_action -> api_call -> db_update",
      "description": "UI action triggers API and database updates",
      "adoTestCaseId": 433
    },
    {
      "executeTest": true,
      "testId": "INT_002",
      "testPriority": "P2",
      "testEnvironment": "demo",
      "scenario": "api_to_ui",
      "apiAction": "update_inventory",
      "uiValidation": "product_count",
      "expectedFlow": "api_update -> ui_refresh -> visual_validation",
      "description": "API update reflects in UI",
      "adoTestCaseId": 434
    }
  ],
  "parallelExecutionTestCases": [
    {
      "executeTest": true,
      "testId": "PAR_001",
      "testPriority": "P1",
      "testEnvironment": "demo",
      "workerCount": 4,
      "testSuite": "smoke_tests",
      "expectedConcurrency": "high",
      "maxExecutionTime": 300000,
      "description": "Parallel execution of smoke tests",
      "adoTestCaseId": 435
    },
    {
      "executeTest": true,
      "testId": "PAR_002",
      "testPriority": "P2",
      "testEnvironment": "demo",
      "workerCount": 2,
      "testSuite": "regression_tests",
      "expectedConcurrency": "medium",
      "maxExecutionTime": 600000,
      "description": "Parallel execution of regression tests",
      "adoTestCaseId": 436
    }
  ]
} 